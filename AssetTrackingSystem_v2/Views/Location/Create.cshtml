@model AssetTrackingSystem_v2.Models.Location

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <h2>Create</h2>
        <hr />
    </div>

    <div class="row container-fluid">
        <div class="col-xs-10 col-xs-offset-1 col-sm-8 col-sm-offset-2 col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-2">

            <div class="widget-box">
                <div class="widget-header">
                    <h4 class="widget-title">Asset Location Setup</h4>
                </div>

                <div class="widget-body">
                    <div class="widget-main">
                        <div class="container-fluid">

                            <!-- form start -->
                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()

                                <div class="form-horizontal">

                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-4" style="text-align: center">
                                                @Html.LabelFor(model => model.OrganizationId, new { @class = "control-label" })
                                            </div>
                                            <div class="col-md-8">
                                                @Html.DropDownListFor(model => model.OrganizationId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.OrganizationId, null, new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-4" style="text-align: center">
                                                @Html.LabelFor(model => model.BranchId, new { @class = "control-label" })
                                            </div>
                                            <div class="col-md-8">
                                                @Html.DropDownListFor(model => model.BranchId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.BranchId, null, new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-4" style="text-align: center">
                                                @Html.LabelFor(model => model.Name, "Name", new { @class = "control-label" })
                                            </div>
                                            <div class="col-md-8">
                                                @Html.TextBoxFor(model => model.Name, null, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.Name, null, new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-md-4" style="text-align: center">
                                                @Html.LabelFor(model => model.ShortName, "Short Name", new { @class = "control-label" })
                                            </div>
                                            <div class="col-md-8">
                                                @Html.TextBoxFor(model => model.ShortName, null, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.ShortName, null, new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <br />
                                    <div class="form-group">
                                        <div class="row" style="text-align: center">
                                            <input type="submit" value="Save" class="btn btn-success" />
                                        </div>
                                    </div>
                                </div>
                            }
                            <!-- ./ form end -->
                        </div>

                    </div>
                    <!-- widget main -->
                </div>
                <!-- widget body -->
            </div>
        </div>
    </div>
</div>
<div>
    @Html.ActionLink("Back to List", "Index", "Home")
</div>

@section JavaScript {
    <script type="text/javascript">
        $(document).ready(function () {

            /* Load DropDownList for organization */
            $.ajax({
                url: '/Organization/GetAllOrganization',
                contentType: 'application/json',
                success: function (data) {

                    var defaultOption = "<option value=''>Select Organization</option>";
                    $('#OrganizationId').append(defaultOption);
                    
                    $.each(data, function(i) {
                        var options = "<option value='" + data[i].Id + "'>" + data[i].Name + "</option>";

                        $('#OrganizationId').append(options);
                    });
                }
            });

            /* Load DropDownList for Branches */
            $.ajax({
                url: '/Branch/GetAllBranches',
                contentType: 'application/json',
                success: function (data) {
                    var defaultOption = "<option value=''>Select Branch</option>";
                    $('#BranchId').append(defaultOption);

                    $.each(data, function (i) {
                        var options = "<option value='" + data[i].Branch.Id + "'>" + data[i].Branch.Name + "</option>";

                        $('#BranchId').append(options);
                    });
                }
            });


            /* Automatically select organization/branch upon selection of one another */
            $('#OrganizationId, #BranchId').change(function() {
                var organizaionId = $('#OrganizationId').val();
                var branchId = $('#BranchId').val();


            });
        });
    </script>
}

